package com.SampleProject.core.servlets;

import org.apache.sling.api.resource.ResourceResolver;
import org.apache.sling.api.resource.ResourceResolverFactory;
import org.apache.sling.api.resource.Resource;
import org.osgi.service.component.annotations.Component;
import org.osgi.service.component.annotations.Reference;

import com.day.cq.replication.ReplicationActionType;
import com.day.cq.replication.Replicator;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import javax.jcr.Session;
import javax.servlet.Servlet;

import org.apache.sling.api.servlets.HttpConstants;
import org.apache.sling.api.servlets.SlingSafeMethodsServlet;
import org.apache.sling.api.SlingHttpServletRequest;
import org.apache.sling.api.SlingHttpServletResponse;
@SuppressWarnings("serial")
@Component(service=Servlet.class,
property={
        "sling.servlet.methods=" + HttpConstants.METHOD_GET,
        "sling.servlet.paths="+ "/bin/replicatepage",
        "sling.servlet.extensions=" + "txt"
})
public class ReplicatePageServlet extends SlingSafeMethodsServlet {

	@Reference
	private ResourceResolverFactory resolverFactory;

	@Reference
	private Replicator replicator;

	protected void doGet(SlingHttpServletRequest request, SlingHttpServletResponse response) throws IOException {
		
		try {
			Map<String, Object> authInfo = new HashMap<String, Object>();
			authInfo.put(ResourceResolverFactory.SUBSERVICE, "test");
			ResourceResolver resourceResolver = resolverFactory.getServiceResourceResolver(authInfo);
			String pagePath = request.getParameter("pagePath");
			Resource pageResource = resourceResolver.getResource(pagePath);
			if (pageResource != null) {
				Session session = resourceResolver.adaptTo(Session.class);
				replicator.replicate(session, ReplicationActionType.ACTIVATE, pagePath);
				response.getWriter().println("Page replicated successfully.");
				resourceResolver.commit();
			} else {
				response.getWriter().println("Invalid page path or page not found.");
			}
			resourceResolver.close();
		} catch (Exception e) {
			response.getWriter().println("An error occurred while replicating the page: " + e.getMessage());
		}
	}
}
